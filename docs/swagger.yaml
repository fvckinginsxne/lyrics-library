basePath: /
definitions:
  dto.CreateRequest:
    properties:
      artist:
        example: Juice WRLD
        type: string
      title:
        example: Lucid Dreams
        type: string
    required:
    - artist
    - title
    type: object
  dto.CredentialsRequest:
    properties:
      email:
        example: test@test.com
        type: string
      password:
        example: matveyisgoat123
        type: string
    required:
    - email
    - password
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.TrackResponse:
    properties:
      artist:
        example: Lucid Dreams
        type: string
      lyrics:
        example:
        - I still see your shadows in my room...
        items:
          type: string
        type: array
      title:
        example: Juice WRLD
        type: string
      translation:
        example:
        - Я все еще вижу твои тени в моей комнате...
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for getting song lyrics with translation by artist and title
  title: Lyrics Library API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Data to login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CredentialsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CredentialsRequest'
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /track:
    get:
      description: |-
        If 'title' is provided, returns lyrics for the specific song.
        Otherwise, returns a list of all songs by the artist (without track).
      parameters:
      - description: Artist name
        example: '"Juice WRLD"'
        in: query
        name: artist
        required: true
        type: string
      - description: Song title (optional)
        example: '"Legends"'
        in: query
        name: title
        type: string
      responses:
        "200":
          description: Returns lyrics (object) or artist tracks (array)
          schema:
            $ref: '#/definitions/dto.TrackResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get song lyrics or artist tracks
      tags:
      - track
    post:
      consumes:
      - application/json
      description: Save lyrics and translation for a given artist and song title
      parameters:
      - description: Lyrics request data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully saved track
          schema:
            $ref: '#/definitions/dto.TrackResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Save a new track with translation
      tags:
      - track
  /track/{uuid}:
    delete:
      description: Delete song lyrics by uuid
      parameters:
      - description: Track UUID
        example: e434dc13-ada5-4bde-b695-d97014dadebc
        in: path
        name: uuid
        required: true
        type: string
      responses:
        "204":
          description: Lyrics deleted successfully
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Delete song lyrics
      tags:
      - track
schemes:
- http
swagger: "2.0"
