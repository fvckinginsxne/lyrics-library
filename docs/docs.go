// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/track": {
            "read": {
                "description": "If 'title' is provided, returns track for the specific song.\nOtherwise, returns a list of all songs by the artist (without track).",
                "tags": [
                    "track"
                ],
                "summary": "Get song track or artist tracks",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"Juice WRLD\"",
                        "description": "Artist name",
                        "name": "artist",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Legends\"",
                        "description": "Song title (optional)",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns song (object) or artist tracks (array)",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Artist is required",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Artist/track not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Saves track and translation for a given artist and song title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Save new track with translation",
                "parameters": [
                    {
                        "description": "Lyrics request data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully saved track",
                        "schema": {
                            "$ref": "#/definitions/dto.TrackResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Lyrics not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/track/{uuid}": {
            "delete": {
                "description": "Delete song track by uuid",
                "tags": [
                    "track"
                ],
                "summary": "Delete song track",
                "parameters": [
                    {
                        "type": "string",
                        "example": "e434dc13-ada5-4bde-b695-d97014dadebc",
                        "description": "Track UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Track deleted successfully"
                    },
                    "400": {
                        "description": "When UUID is missing or invalid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "dto.TrackResponse": {
            "type": "object",
            "properties": {
                "artist": {
                    "type": "string",
                    "example": "Lucid Dreams"
                },
                "track": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "I still see your shadows in my room..."
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "Juice WRLD"
                },
                "translation": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Я все еще вижу твои тени в моей комнате..."
                    ]
                }
            }
        },
        "create.Request": {
            "type": "object",
            "required": [
                "artist",
                "title"
            ],
            "properties": {
                "artist": {
                    "type": "string",
                    "example": "Juice WRLD"
                },
                "title": {
                    "type": "string",
                    "example": "Legends"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Lyrics Library API",
	Description:      "API for getting song track with translation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
